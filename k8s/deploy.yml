apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: www-firefox-com
    type: web
  name: www-firefox-com
spec:
  replicas: 5
  selector:
    matchLabels:
      app: www-firefox-com
      type: web
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: www-firefox-com
        type: web
      name: www-firefox-com
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9113"
        prometheus.io/scrape: "true"
    spec:
      containers:
      - image: mozmeao/www.firefox.com:${CI_COMMIT_SHORT_SHA}
        imagePullPolicy: Always
        name: www-firefox-com-web
        ports:
          - containerPort: 8080
        livenessProbe:
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          httpGet:
            path: /healthz/
            scheme: HTTP
            port: 8080
          timeoutSeconds: 5
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - name: prometheus-exporter
        imagePullPolicy: Always
        image: nginx/nginx-prometheus-exporter:0.7.0
        ports:
          - containerPort: 9113
        args:
          - "-nginx.scrape-uri=http://localhost:8080/stub_status"
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
